#####
### Project Babbage — Services for Local Development
#####
version: '3.8'

services:
  # The Bridgeport Connecticut Proxy
  connecticut:
    # build: ../connecticut
    image: us.gcr.io/computing-with-integrity/connecticut
    ports:
      - "3103:3103"
    environment:
      PORT: 3103

  ###
  ## Bridgeport Derived Action Datasets
  ###

  # MongoDB
  bridgeport-mongo:
    image: mongo:5
    command: |
      bash -c "mongod --bind_ip_all --replSet rs0 --fork --syslog --port 3113 && mongo --port 3113 --eval \"if (!rs.status().ok) rs.initiate({_id : 'rs0', members : [{_id : 0, host : 'bridgeport-mongo:3113'}]})\" && mongo --port 3113 --eval \"while(true) {if (!rs.status().ok) break;sleep(1000)};\""
    hostname: "bridgeport-mongo"
    ports:
      - 3113:27017
    volumes:
     - ./data/bridgeport-mongo-data:/data/db

  # MiniScribe — lightweight local NanoStore
  miniscribe:
    image: us.gcr.io/computing-with-integrity/miniscribe
    ports:
      - "3104:3104"
    volumes:
     - ./data/miniscribe-data:/app/data
    environment:
      NODE_ENV: 'development'

  ###
  ## Debugging Tools — Uncomment when needed
  ###
  
  # Mongo Express — web-based MongoDB database viewer
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_SERVER: bridgeport-mongo
  #     ME_CONFIG_MONGODB_PORT: 3113
  #   depends_on:
  #     - bridgeport-mongo

  ## PHPMyAdmin — Web-based SQL database viewer
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   links:
  #   - dojo-mysql
  #   environment:
  #     PMA_HOST: dojo-mysql
  #     PMA_PORT: 3112
  #     PMA_ARBITRARY: 1
  #   restart: always
  #   ports:
  #   - 8090:80

  ###
  ## User-defined Bridges and Services — Extend to support your application
  ## 
  ## To generate these bridge entries for your application, send a Parapet 
  ## request to your bridge ID while it is NOT running, and Connecticut will 
  ## print an error message in the Docker console. Contained in that error 
  ## message will be the correct docker-compose configuration for your bridge.
  ##
  ## Don't copy one of the System Bridges above for your brige, it won't work!
  ###

  # todo-bridge - Bridge for tracking TODO tokens
  reader-todo:
    hostname: "reader-1tododtkreezbhykfjmobudufmsxxugzg"
    build: ../todo-bridge/reader
    environment:
      BRIDGE: 'eyJpZCI6IjFUb0RvRHRLcmVFemJIWUtGam1vQnVkdUZtU1hYVUdaRyJ9'
      PORT: 80
      MONGODB_READ_CREDS: 'bW9uZ29kYjovL2JyaWRnZXBvcnQtbW9uZ286MzExMy9icmlkZ2VfMVRvRG9EdEtyZUV6YkhZS0ZqbW9CdWR1Rm1TWFhVR1pH'
      MONGODB_DATABASE: 'bridge_1ToDoDtKreEzbHYKFjmoBuduFmSXXUGZG'
  transformer-todo:
    hostname: "transformer-1tododtkreezbhykfjmobudufmsxxugzg"
    build: ../todo-bridge/transformer
    environment:
      PORT: 80
      MONGODB_WRITE_CREDS: 'mongodb://bridgeport-mongo:3113/bridge_1ToDoDtKreEzbHYKFjmoBuduFmSXXUGZG'
      MONGODB_DATABASE: 'bridge_1ToDoDtKreEzbHYKFjmoBuduFmSXXUGZG'
